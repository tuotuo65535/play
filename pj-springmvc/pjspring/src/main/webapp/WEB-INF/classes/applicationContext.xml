<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd 
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
	<!-- jdbcTemplate 配置 -->
    <!-- 配置读取外部配置文件
    <context:property-placeholder location="classpath:**/jdbc.properties" />
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close" p:driverClassName="${jdbc.driverClassName}"
        p:url="${jdbc.url}" p:username="${jdbc.username}" p:password="${jdbc.password}" />
    <context:annotation-config /> //此行语句使得resource autowired 等四个注解可以使用
     -->
    
    
    <!-- 实例化jdbcTemplate,同时注入数据源
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
        p:dataSource-ref="dataSource" />
     -->
    
    <!-- 配置事务管理器
    <bean id="txManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
     -->
    
    <!-- 事务扫描开始(开启@Tranctional)
    <tx:annotation-driven transaction-manager="txManager" />
     -->
    
    
	<!-- hibernate4 配置 -->  
	
	<!-- bean definitions here -->
	<!-- controller return json -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list >
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>

	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">    
		<property name="supportedMediaTypes">    
			<list>    
				<value>application/json;charset=UTF-8</value>    
			</list>    
		</property>  
	</bean>  
	
	<context:property-placeholder location="classpath:**/hibernate-cfg.properties" />
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close" p:driverClassName="${jdbc.driverClassName}"
        p:url="${jdbc.url}" p:username="${jdbc.username}" p:password="${jdbc.password}" />
    <!-- 配置hibernate session工厂 -->  
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <property name="hibernateProperties">  
            <props>  
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>  
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>  
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>  
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>  
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory  
                </prop>  
                <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
            </props>  
        </property>  
  
        <!-- 自动扫描注解方式配置的hibernate类文件 -->  
        <property name="packagesToScan">  
            <list>  
                <value>com.czy</value>  
            </list>  
        </property>  
    </bean>  
  
    <!-- 配置事务管理器 -->  
    <bean name="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory"></property>  
    </bean>  
    
    <!-- 默认扫描的包路径 -->  
	<context:component-scan base-package="com.czy" >
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan> 
  
    <!-- 注解方式配置事务 -->  
    <!--
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
    -->
  
    <!-- 拦截器方式配置事务 -->  
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">  
        <tx:attributes>  
            <tx:method name="add*"/>  <!--不写propagation,则默认为REQUIRED-->
            <tx:method name="save*"/>  
            <tx:method name="update*"/>  
            <tx:method name="modify*"/>  
            <tx:method name="edit*"/>  
            <tx:method name="delete*"/>  
            <tx:method name="remove*"/>  
            <tx:method name="repair"/>  
            <tx:method name="deleteAndRepair"/>  
  
            <tx:method name="get*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="find*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="load*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="search*" propagation="REQUIRED" read-only="true" />  
            <tx:method name="datagrid*" propagation="REQUIRED" read-only="true" />  
        </tx:attributes>  
    </tx:advice>  
    <aop:config proxy-target-class="true">  
        <aop:advisor advice-ref="transactionAdvice" pointcut="execution(* com.czy.dao..*.*(..))" />  
    </aop:config>  
</beans>